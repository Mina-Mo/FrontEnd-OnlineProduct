{"ast":null,"code":"import _defineProperty from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\src\\\\components\\\\Card.js\";\n// component for rendering deck card \nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Pages from \"./Pages\";\nimport { pagination } from \"../common/Pagination\";\nimport { getUser } from \"../Data/Users\";\n\nvar Card =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      try {\n        var user = getUser();\n        this.setState({\n          user: user\n        });\n        this.setState({\n          isLoaded: true\n        });\n      } catch (error) {\n        this.setState({\n          isLoaded: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      if (this.state.isLoaded === false) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Loading...\"); // get props\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          currentPage = _this$props.currentPage,\n          pageSize = _this$props.pageSize,\n          selectedCategery = _this$props.selectedCategery,\n          onPage = _this$props.onPage;\n      var user = this.state.user;\n      var products;\n      var selectedProducts; // get the selected categery items\n\n      if (selectedCategery !== \"All Categeries\") {\n        selectedProducts = data.filter(function (product) {\n          return product.Categery === selectedCategery;\n        });\n      } else if (selectedCategery === \"All Categeries\") {\n        selectedProducts = data;\n      } // get the an array of the current page\n\n\n      products = pagination(selectedProducts, currentPage, pageSize);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-deck mb-3 text-center mt-4 row \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, products.map(function (product) {\n        return React.createElement(\"div\", {\n          className: \"col-lg-3 col-md-4 col-sm-6 col-xs-12 pl-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          key: product._id,\n          className: \"card mb-4 shadow-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, user ? React.createElement(NavLink, {\n          to: \"/Product/\".concat(product._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, product.Name) : React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, product.Name)), React.createElement(\"div\", {\n          className: \"card-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"card-title pricing-card-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, product.Price, \" \", React.createElement(\"small\", {\n          className: \"text-muted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"U$D\")), React.createElement(\"ul\", {\n          className: \"list-unstyled mt-0 mb-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, product.Description), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Selling by: \", product.SellingBy.Name)))));\n      })), React.createElement(Pages, (_React$createElement = {\n        data: data,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        onPage: this.handlePage,\n        productsLength: selectedProducts.length\n      }, _defineProperty(_React$createElement, \"onPage\", onPage), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default Card;","map":{"version":3,"sources":["E:\\projects\\JS\\Front and Back\\online-products\\src\\components\\Card.js"],"names":["React","Component","NavLink","Pages","pagination","getUser","Card","state","isLoaded","user","setState","error","props","data","currentPage","pageSize","selectedCategery","onPage","products","selectedProducts","filter","product","Categery","map","_id","Name","Price","Description","SellingBy","handlePage","length"],"mappings":"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","sourcesContent":["// component for rendering deck card \r\n\r\nimport React , {Component} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Pages from \"./Pages\"\r\nimport {pagination} from \"../common/Pagination\"\r\nimport {getUser} from \"../Data/Users\"\r\n\r\nclass Card extends Component{\r\n  state={\r\n    isLoaded: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    try{\r\n      const user = getUser()\r\n      this.setState({user})\r\n      this.setState({isLoaded: true})\r\n  \r\n    }catch(error){\r\n      this.setState({isLoaded: true})\r\n    }\r\n  }\r\n \r\n    render(){\r\n      if(this.state.isLoaded === false) return <p>Loading...</p>\r\n      // get props\r\n        const{data, currentPage, pageSize, selectedCategery, onPage} =this.props\r\n        const {user} = this.state\r\n        let products;\r\n        let selectedProducts;\r\n\r\n        // get the selected categery items\r\n        if(selectedCategery !== \"All Categeries\"){\r\n          selectedProducts = data.filter(product=> product.Categery === selectedCategery)\r\n        }else if(selectedCategery=== \"All Categeries\"){\r\n          selectedProducts = data\r\n        }\r\n        // get the an array of the current page\r\n         products = pagination(selectedProducts, currentPage, pageSize)\r\n        return(\r\n          <React.Fragment>\r\n            <div className=\"card-deck mb-3 text-center mt-4 row \">\r\n            \r\n            {products.map(product=>\r\n            <div className=\"col-lg-3 col-md-4 col-sm-6 col-xs-12 pl-5\">\r\n                  <div key={product._id} className=\"card mb-4 shadow-sm\">\r\n              <div className=\"card-header\">\r\n              {(user) ? <NavLink to={`/Product/${product._id}`} >{product.Name}</NavLink>: <h5>{product.Name}</h5>}\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <h1 className=\"card-title pricing-card-title\">{product.Price} <small className=\"text-muted\">U$D</small></h1>\r\n                <ul className=\"list-unstyled mt-0 mb-0\">\r\n                  <li>{product.Description}</li>\r\n                  <li>Selling by: {product.SellingBy.Name}</li>\r\n                </ul>           \r\n              </div>  \r\n            </div>\r\n            </div>\r\n                  )}\r\n              </div>\r\n               <Pages data={data} \r\n                  pageSize={pageSize} \r\n                  currentPage={currentPage} \r\n                  onPage={this.handlePage}\r\n                  productsLength={selectedProducts.length}\r\n                  onPage={onPage} \r\n                  />\r\n\r\n</React.Fragment>\r\n        \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}