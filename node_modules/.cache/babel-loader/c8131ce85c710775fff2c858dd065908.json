{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\projects\\\\JS\\\\Front and Back\\\\online-products\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n// all item serever requests\n// getting the service \nimport http from \"../Service/http\";\nvar Categeries = [{\n  name: \"Laptop\",\n  id: 1\n}, {\n  name: \"Smart Phones\",\n  id: 2\n}, {\n  name: \"Accessories\",\n  id: 3\n}]; // getting all items from the server\n\nexport function getProducts() {\n  return http.get(\"http://localhost:3000/api/items\");\n} // creating or updating item\n\nexport function amendProducts(_x, _x2) {\n  return _amendProducts.apply(this, arguments);\n} // remove item\n\nfunction _amendProducts() {\n  _amendProducts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data, userId) {\n    var product;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            product = {}; // creating new item\n\n            if (data._id) {\n              _context.next = 10;\n              break;\n            }\n\n            // getting the input data and apply it on the new item\n            product.Name = data.Name;\n            product.Description = data.Description;\n            product.Price = data.Price;\n            product.Categery = data.Categery;\n            product.SellingBy = userId; // sending the server request\n\n            return _context.abrupt(\"return\", http.post(\"http://localhost:3000/api/items\", product));\n\n          case 10:\n            if (!data._id) {\n              _context.next = 17;\n              break;\n            }\n\n            // geting the new updates from the input data\n            product.Name = data.Name;\n            product.Description = data.Description;\n            product.Price = data.Price;\n            product.Categery = data.Categery;\n            product.SellingBy = userId; // send a server request\n\n            return _context.abrupt(\"return\", http.put(\"http://localhost:3000/api/items/\".concat(data._id), product));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _amendProducts.apply(this, arguments);\n}\n\nexport function deleteProduct(product) {\n  return http.delete(\"http://localhost:3000/api/items/\".concat(product._id));\n} //getting catergeries\n\nexport function getCategery() {\n  return Categeries;\n}","map":{"version":3,"sources":["E:\\projects\\JS\\Front and Back\\online-products\\src\\Data\\Products.js"],"names":["http","Categeries","name","id","getProducts","get","amendProducts","data","userId","product","_id","Name","Description","Price","Categery","SellingBy","post","put","deleteProduct","delete","getCategery"],"mappings":";;AAAA;AAEA;AACA,OAAOA,IAAP,MAAiB,iBAAjB;AAEA,IAAMC,UAAU,GAChB,CAAC;AAACC,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,EAAE,EAAE;AAArB,CAAD,EAA0B;AAACD,EAAAA,IAAI,EAAE,cAAP;AAAuBC,EAAAA,EAAE,EAAC;AAA1B,CAA1B,EAAuD;AAACD,EAAAA,IAAI,EAAE,aAAP;AAAsBC,EAAAA,EAAE,EAAC;AAAzB,CAAvD,CADA,C,CAGA;;AACA,OAAO,SAASC,WAAT,GAAsB;AACzB,SAAOJ,IAAI,CAACK,GAAL,CAAS,iCAAT,CAAP;AACH,C,CAED;;AACA,gBAAsBC,aAAtB;AAAA;AAAA,C,CAiCA;;;;;2BAjCO,iBAA6BC,IAA7B,EAAmCC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,OADD,GACS,EADT,EAGH;;AAHG,gBAICF,IAAI,CAACG,GAJN;AAAA;AAAA;AAAA;;AAMH;AACCD,YAAAA,OAAO,CAACE,IAAR,GAAaJ,IAAI,CAACI,IAAlB;AACAF,YAAAA,OAAO,CAACG,WAAR,GAAoBL,IAAI,CAACK,WAAzB;AACAH,YAAAA,OAAO,CAACI,KAAR,GAAcN,IAAI,CAACM,KAAnB;AACAJ,YAAAA,OAAO,CAACK,QAAR,GAAiBP,IAAI,CAACO,QAAtB;AACAL,YAAAA,OAAO,CAACM,SAAR,GAAmBP,MAAnB,CAXE,CAaF;;AAbE,6CAcKR,IAAI,CAACgB,IAAL,CAAU,iCAAV,EAA6CP,OAA7C,CAdL;;AAAA;AAAA,iBAkBKF,IAAI,CAACG,GAlBV;AAAA;AAAA;AAAA;;AAoBC;AACAD,YAAAA,OAAO,CAACE,IAAR,GAAaJ,IAAI,CAACI,IAAlB;AACAF,YAAAA,OAAO,CAACG,WAAR,GAAoBL,IAAI,CAACK,WAAzB;AACAH,YAAAA,OAAO,CAACI,KAAR,GAAcN,IAAI,CAACM,KAAnB;AACAJ,YAAAA,OAAO,CAACK,QAAR,GAAiBP,IAAI,CAACO,QAAtB;AACAL,YAAAA,OAAO,CAACM,SAAR,GAAkBP,MAAlB,CAzBD,CA2BC;;AA3BD,6CA4BQR,IAAI,CAACiB,GAAL,2CAA4CV,IAAI,CAACG,GAAjD,GAAwDD,OAAxD,CA5BR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkCP,OAAO,SAASS,aAAT,CAAuBT,OAAvB,EAA+B;AAClC,SAAOT,IAAI,CAACmB,MAAL,2CAA+CV,OAAO,CAACC,GAAvD,EAAP;AACH,C,CAED;;AACA,OAAO,SAASU,WAAT,GAAsB;AACzB,SAAOnB,UAAP;AACH","sourcesContent":["// all item serever requests\r\n\r\n// getting the service \r\nimport http from \"../Service/http\"\r\n\r\nconst Categeries =\r\n[{name: \"Laptop\", id: 1}, {name: \"Smart Phones\", id:2},{name: \"Accessories\", id:3}]\r\n\r\n// getting all items from the server\r\nexport function getProducts(){\r\n    return http.get(\"http://localhost:3000/api/items\")\r\n}\r\n\r\n// creating or updating item\r\nexport async function amendProducts(data, userId){\r\n    let product={}\r\n\r\n    // creating new item\r\n    if(!data._id){\r\n\r\n    // getting the input data and apply it on the new item\r\n     product.Name=data.Name\r\n     product.Description=data.Description\r\n     product.Price=data.Price\r\n     product.Categery=data.Categery\r\n     product.SellingBy =userId\r\n\r\n     // sending the server request\r\n     return http.post(\"http://localhost:3000/api/items\", product)\r\n    }\r\n\r\n    // if updating item\r\n    else if(data._id){\r\n\r\n        // geting the new updates from the input data\r\n        product.Name=data.Name\r\n        product.Description=data.Description\r\n        product.Price=data.Price\r\n        product.Categery=data.Categery\r\n        product.SellingBy=userId\r\n\r\n        // send a server request\r\n        return http.put(`http://localhost:3000/api/items/${data._id}`, product)\r\n    }\r\n    \r\n}\r\n\r\n// remove item\r\nexport function deleteProduct(product){\r\n    return http.delete(`http://localhost:3000/api/items/${product._id}`)\r\n}\r\n\r\n//getting catergeries\r\nexport function getCategery(){\r\n    return Categeries\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}