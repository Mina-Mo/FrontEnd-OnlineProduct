{"version":3,"sources":["components/Pages.js","Data/Users.js","Service/http.js","components/Card.js","common/Pagination.js","components/Cards.js","components/Categery.js","components/Welcome.js","Data/Products.js","components/Home.js","common/ErrorAlert.js","common/Input.js","common/SubmitBtn.js","common/Form.js","components/Login.js","components/Register.js","components/NavBar.js","components/LogOut.js","components/ProductDetails.js","components/New.js","components/Me.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Pages","_this$props","this","props","pageSize","currentPage","onPage","productsLength","pages","totalPages","Math","ceil","i","push","react_default","a","createElement","aria-label","className","map","page","key","onClick","Component","jwt","axios","defaults","baseURL","process","interceptors","response","use","error","status","alert","Promise","reject","localStorage","getItem","headers","common","http","get","post","put","delete","getUser","jwtDecode","Card","state","isLoaded","user","setState","products","selectedProducts","data","selectedCategery","filter","product","Categery","items","pageNumber","startingIndex","_","slice","take","value","pagination","Fragment","_id","react_router_dom","to","concat","Name","Price","Description","SellingBy","components_Pages","Object","defineProperty","handlePage","length","Cards","onDelete","components_Card","Categeries","OnCategery","style","width","name","c","id","Welcome","getProducts","amendProducts","_x","_x2","_amendProducts","apply","arguments","_callee","userId","regenerator_default","wrap","_context","prev","next","abrupt","stop","deleteProduct","Home","isloaded","Email","Password","CreatedItems","handleCategery","_this","_this$state","components_Welcome","components_Categery","components_Cards","handleDeleteBtn","ErrorAlert","errors","role","Input","label","type","onChange","common_ErrorAlert","SubmitBtn","Form","formValidation","objectSpread","validation","Joi","validate","schema","abortEarly","errs","details","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","path","message","err","return","properityValidation","obj","handleChange","e","input","currentTarget","inputRender","console","log","common_Input","btnRender","common_SubmitBtn","Login","string","email","min","max","required","handleSubmit","_ref2","preventDefault","sent","setItem","window","location","t0","onSubmit","Register","NavBar","textDecoration","color","LogOut","removeItem","ProdustDetails","number","integer","valid","handleSave","originalData","match","params","find","history","replace","Me","isloading","reload","_this2","item","NotFound","class","App","components_NavBar","react_router","render","New","ProductDetails","assign","component","exact","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baba92b5.chunk.js","sourcesContent":["//compnent for rendering the Page Number\r\n\r\nimport React, {Component} from \"react\"\r\n\r\nclass Pages extends Component{\r\n    render(){\r\n        //get props\r\n        const {pageSize, currentPage, onPage, productsLength} = this.props\r\n\r\n        // set the pages array\r\n        const pages = []\r\n\r\n        // getting the total pages\r\n        const totalPages= Math.ceil(productsLength/pageSize)\r\n\r\n        // creating the page number and push to the pages array\r\n        for(let i=1; i<= totalPages; i++){\r\n            pages.push(i)\r\n        }\r\n        return(\r\n            <nav aria-label=\"Page navigation example\">\r\n            <ul className=\"pagination\">\r\n                {pages.map(page=> <li key ={page}\r\n                 className={currentPage === page ? \"page-item active\": \"page-item\" } \r\n                 onClick={()=>onPage(page)}><a className=\"page-link\">{page}</a></li>)}\r\n            </ul>\r\n          </nav>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Pages;\r\n\r\n","// all user server requests\r\n\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\"\r\nimport http from \"../Service/http\"\r\n\r\n// creating new user\r\nexport function userRegisteration(user){\r\nreturn http.post(\"/users/signIn\", {\r\n    Name: user.Name,\r\n    Email: user.Email,\r\n    Password: user.Password\r\n})\r\n}\r\n\r\n// login \r\nexport function userLogin(Email, Password){\r\n   return http.post(\"/users/logIn\", {Email,Password})\r\n}\r\n\r\n// getting user data from the stored accessToken\r\nexport function getUser(){\r\n    const jwt = localStorage.getItem(\"token\")\r\n    const user = jwtDecode(jwt)\r\n    return user\r\n}\r\n\r\n// getting user profile\r\nexport function getProfile(){\r\n   return http.get(\"/api/users/me\")\r\n}\r\n\r\n// set a common header for all routes\r\nexport function setJwt(jwt) {\r\n    axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n  }","// service module\r\n\r\nimport axios from \"axios\"\r\nimport {setJwt} from \"../Data/Users\"\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\r\n\r\n// to intercept the unexpected errors\r\naxios.interceptors.response.use(null, error=>{\r\n    if(!error.response.status >= 400 && error.response.status < 500){\r\n        alert(\"Somethig failed!\")\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\n// getting the access token from the local Storage\r\nexport function getjwt(){\r\n    return localStorage.getItem(\"token\")\r\n}\r\n\r\n// set access token header\r\nsetJwt(getjwt())\r\n\r\nexport default{\r\n    get: axios.get,\r\n    post:axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete\r\n}","// component for rendering deck card \r\n\r\nimport React , {Component} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\nimport Pages from \"./Pages\"\r\nimport {pagination} from \"../common/Pagination\"\r\nimport {getUser} from \"../Data/Users\"\r\n\r\nclass Card extends Component{\r\n  state={\r\n    isLoaded: false\r\n  }\r\n\r\n  componentDidMount(){\r\n    try{\r\n      const user = getUser()\r\n      this.setState({user})\r\n      this.setState({isLoaded: true})\r\n  \r\n    }catch(error){\r\n      this.setState({isLoaded: true})\r\n    }\r\n  }\r\n \r\n    render(){\r\n      if(this.state.isLoaded === false) return <p>Loading...</p>\r\n      // get props\r\n        const{data, currentPage, pageSize, selectedCategery, onPage} =this.props\r\n        const {user} = this.state\r\n        let products;\r\n        let selectedProducts;\r\n\r\n        // get the selected categery items\r\n        if(selectedCategery !== \"All Categeries\"){\r\n          selectedProducts = data.filter(product=> product.Categery === selectedCategery)\r\n        }else if(selectedCategery=== \"All Categeries\"){\r\n          selectedProducts = data\r\n        }\r\n        // get the an array of the current page\r\n         products = pagination(selectedProducts, currentPage, pageSize)\r\n        return(\r\n          <React.Fragment>\r\n          <div className=\"card-deck mb-3 text-center mt-4\">\r\n          {products.map(product=>\r\n                <div key={product._id} className=\"card mb-4 shadow-sm\">\r\n            <div className=\"card-header\">\r\n            {(user) ? <NavLink to={`/Product/${product._id}`} >{product.Name}</NavLink>: <h5>{product.Name}</h5>}\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <h1 className=\"card-title pricing-card-title\">{product.Price} <small className=\"text-muted\">U$D</small></h1>\r\n              <ul className=\"list-unstyled mt-0 mb-0\">\r\n                <li>{product.Description}</li>\r\n                <li>Selling by: {product.SellingBy.Name}</li>\r\n              </ul>           \r\n            </div>  \r\n          </div>\r\n                )}\r\n            </div>\r\n               <Pages data={data} \r\n                  pageSize={pageSize} \r\n                  currentPage={currentPage} \r\n                  onPage={this.handlePage}\r\n                  productsLength={selectedProducts.length}\r\n                  onPage={onPage} \r\n                  />\r\n\r\n</React.Fragment>\r\n        \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","// function to get an array of each page\r\n\r\nimport _ from \"lodash\"\r\n\r\nexport function pagination(items, pageNumber, pageSize){\r\n    const startingIndex = (pageNumber-1)*pageSize\r\n    return _(items).slice(startingIndex).take(pageSize).value()\r\n    }","// component for rendering all deck cards\r\n\r\nimport React , {Component} from \"react\"\r\nimport Card from \"./Card\"\r\n\r\nclass Cards extends Component{\r\n\r\n    render(){\r\n        // get props\r\n        const {onDelete, data, selectedCategery, pageSize, currentPage, onPage} = this.props\r\n        return(\r\n                <Card onDelete={onDelete} data={data} selectedCategery={selectedCategery}\r\n                    pageSize={pageSize} currentPage={currentPage} onPage={onPage} />\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cards;","// componenet for rendering the categeries list\r\n\r\nimport React, {Component} from \"react\"\r\n\r\nclass Categery extends Component{\r\n    render(){\r\n        // get props\r\n        const {Categeries,OnCategery, selectedCategery} = this.props\r\n        return(\r\n            <div className =\"categery mx-auto\" style={{width: \"50%\" }}>\r\n                <ul className=\"list-group list-group-horizontal\">\r\n                    <li className={selectedCategery === \"All Categeries\" ? \"list-group-item active\": \"list-group-item\"} name=\"All Categeries\" onClick={()=>OnCategery(\"All Categeries\")}>All Categeries</li>\r\n                    {Categeries.map(c=> <li key={c.id} \r\n                    className={c.name === selectedCategery ? \"list-group-item active\": \"list-group-item\"}\r\n                    onClick={()=>OnCategery(c.name)}>\r\n                    {c.name}\r\n                    </li>)}\r\n                 </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Categery;\r\n\r\n","// component for rendering the Welcome header\r\n\r\nimport React from \"react\"\r\n\r\nfunction Welcome(){\r\n    return(\r\n        <div className=\"pricing-header px-3 py-3 pt-md-0 pb-md-4 mx-auto text-center\">\r\n            <h1 className=\"display-4\">Online Product World</h1>\r\n            <p className=\"lead\">Welcome to The Online Product World, where you will find everything you need related by laptops and mobiles hardwares.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome","// all item serever requests\r\n\r\n// getting the service \r\nimport http from \"../Service/http\"\r\n\r\nconst Categeries =\r\n[{name: \"Laptop\", id: 1}, {name: \"Smart Phones\", id:2},{name: \"Accessories\", id:3}]\r\n\r\n// getting all items from the server\r\nexport function getProducts(){\r\n    return http.get(\"/items\")\r\n}\r\n\r\n// creating or updating item\r\nexport async function amendProducts(data, userId){\r\n    let product={}\r\n\r\n    // creating new item\r\n    if(!data._id){\r\n\r\n    // getting the input data and apply it on the new item\r\n     product.Name=data.Name\r\n     product.Description=data.Description\r\n     product.Price=data.Price\r\n     product.Categery=data.Categery\r\n     product.SellingBy =userId\r\n\r\n     // sending the server request\r\n     return http.post(\"/items\", product)\r\n    }\r\n\r\n    // if updating item\r\n    else if(data._id){\r\n\r\n        // geting the new updates from the input data\r\n        product.Name=data.Name\r\n        product.Description=data.Description\r\n        product.Price=data.Price\r\n        product.Categery=data.Categery\r\n        product.SellingBy=userId\r\n\r\n        // send a server request\r\n        return http.put(`/items/${data._id}`, product)\r\n    }\r\n    \r\n}\r\n\r\n// remove item\r\nexport function deleteProduct(product){\r\n    return http.delete(`http://localhost:3000/api/items/${product._id}`)\r\n}\r\n\r\n//getting catergeries\r\nexport function getCategery(){\r\n    return Categeries\r\n}\r\n\r\n","// component gathering all Home component page\r\n\r\nimport React , {Component} from \"react\"\r\nimport Cards from \"./Cards\"\r\nimport Categery from\"./Categery\"\r\nimport Welcome from\"./Welcome\"\r\nimport {getProducts, getCategery, deleteProduct} from \"../Data/Products\"\r\n\r\nclass Home extends Component{\r\n\r\n    state={\r\n        isloaded: false,\r\n        data:[]\r\n        ,\r\n        Categeries: getCategery()\r\n        ,\r\n        user:{\r\n            Name:\"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            CreatedItems: []\r\n        },\r\n        selectedCategery: \"All Categeries\",\r\n        currentPage : 1,\r\n        pageSize: 4        \r\n    }\r\n\r\n    // geting data from server\r\n   async componentDidMount(){\r\n       try{\r\n        const {data}= await getProducts()\r\n        this.setState({data})\r\n        this.setState({isloaded: true})\r\n\r\n       }catch(error){\r\n        this.setState({isloaded: true})\r\n       }\r\n    }\r\n\r\n    // handling the selected categery \r\n    handleCategery=(Categery)=>{\r\n        this.setState({selectedCategery: Categery})\r\n        this.setState({currentPage: 1})\r\n    }\r\n\r\n// handling the selected page\r\n    handlePage=(page)=>{\r\n        this.setState({currentPage: page})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.isloaded=== false)return <p>Loading...</p>\r\n        const {data, Categeries, selectedCategery, pageSize, currentPage} = this.state \r\n        return(\r\n            <React.Fragment>\r\n                <Welcome/>\r\n                <div className=\"container\">\r\n                    <Categery Categeries={Categeries} OnCategery={this.handleCategery} selectedCategery={selectedCategery}/>\r\n                    <Cards onDelete={this.handleDeleteBtn} \r\n                    data={data} \r\n                    selectedCategery={selectedCategery}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPage={this.handlePage}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","// component for handling the errors user input\r\n\r\nimport React from \"react\"\r\n\r\nfunction ErrorAlert(props){\r\n if(!props.errors)return null;\r\n    return(\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                {props.errors}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ErrorAlert","//component to render an input\r\n\r\nimport React , {Component} from \"react\"\r\nimport ErrorAlert from \"./ErrorAlert\"\r\n\r\nclass Input extends Component{\r\n\r\n    render(){\r\n        const{label,type, name, value, onChange}= this.props\r\n        return(\r\n            <div className=\"form-group col-5\">\r\n                <label>{label}</label>\r\n                <input type={type} className=\"form-control\" \r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}/>\r\n                 <ErrorAlert errors={this.props.errors}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;","// component for rendering button\r\n\r\nimport React from \"react\"\r\n\r\nfunction SubmitBtn(props){\r\n        return(\r\n            <button type=\"submit\" className=\"btn btn-primary m-3\">{props.label}</button>\r\n        )\r\n    }\r\n\r\nexport default SubmitBtn;","// component for handling all forms\r\n\r\nimport React , {Component} from \"react\"\r\nimport Joi from \"joi-browser\"\r\nimport Input from \"./Input\"\r\nimport SubmitBtn from \"./SubmitBtn\"\r\n\r\nclass Form extends Component{\r\n    state = {\r\n        data:{},\r\n        errors:{}\r\n\r\n    }\r\n// to validate the total user inputs \r\n    formValidation=()=>{\r\n\r\n        // clone errors state\r\n        const errors={...errors}\r\n\r\n        // validate the inputs using joi-browser\r\n        const validation = Joi.validate(this.state.data, this.schema, {abortEarly: false}) \r\n        if(validation.error){\r\n            const errs = validation.error.details\r\n            for (let i of errs){\r\n                errors[i.path] = i.message\r\n            }\r\n\r\n            // reset the errors state\r\n             this.setState({errors})\r\n        }\r\n    }\r\n\r\n    // validate each input in the form\r\n    properityValidation=(name, value)=>{\r\n\r\n        // creating object from the input to be able to use it with joi validation\r\n        const obj = {[name]: value}\r\n\r\n        // validate the input using joi-browser\r\n        const validation = Joi.validate(obj, {[name]: this.schema[name]})\r\n        const errors={}\r\n        if(validation.error){\r\n            errors[name] = validation.error.details[0].message\r\n         }   \r\n         // reset the errors state\r\n         this.setState({errors})\r\n}\r\n\r\n// handle the onChange input\r\n    handleChange= (e)=>{\r\n        \r\n        // clone data state\r\n        const data = {...this.state.data}\r\n\r\n        // get the current target\r\n        const input = e.currentTarget\r\n\r\n       // set the current target value\r\n        data[input.name] = input.value\r\n\r\n        // reset the state\r\n        this.setState({data})\r\n\r\n        // calling properityValidation methode to validate the input\r\n        this.properityValidation(input.name, input.value)\r\n        }\r\n\r\n// method for rendering an input component\r\n    inputRender=(label, type= \"text\", name, value, errors)=>{\r\n        console.log(name)\r\n        return(\r\n            <Input label={label}\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onChange={this.handleChange}\r\n            errors={errors[name]}/>\r\n        )\r\n    }    \r\n\r\n    // method for rendering an button component\r\n    btnRender=(label)=>{\r\n        return(\r\n            <SubmitBtn label={label}/>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Form;","import React , {Component} from \"react\"\r\nimport Form from  \"../common/Form\"\r\nimport Joi from \"joi-browser\"\r\nimport {userLogin} from \"../Data/Users\"\r\n\r\nclass Login extends Form{\r\nstate={\r\n    data:{Email:\"\", \r\n            Password: \"\"},\r\n\r\n    errors:{}\r\n}\r\n\r\n// input schema validation\r\nschema = {\r\n    Email:Joi.string().email().min(6).max(30).required(),\r\n    Password:Joi.string().min(8).required(),\r\n}\r\n\r\n// handling submit the user login\r\nhandleSubmit=async (e)=>{\r\n    e.preventDefault()\r\n\r\n    // validate the form using formValidation method\r\n    this.formValidation()\r\n    try{\r\n        // sending a login request to the server\r\n        const {data : jwt}= await userLogin(this.state.data.Email, this.state.data.Password)\r\n\r\n        // store the access token in local storage\r\n        localStorage.setItem(\"token\", jwt)\r\n\r\n        // redirect the user to the homepage\r\n        window.location = \"/\"\r\n    }catch(error){\r\n\r\n        // handling the errors\r\n        if(error.response.status >=400 && error.response.status < 500){\r\n            alert(error.response.data)\r\n    }\r\n}\r\n\r\n}\r\n    render(){\r\n        const {data, errors} = this.state\r\n        return(\r\n            <div className=\" ml-3\">\r\n                <h1 className=\"mt-2 mb-5\">Log In</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n                {this.inputRender(\"Email\", \"text\", \"Email\", data.Email, errors)}\r\n                {this.inputRender(\"Password\", \"password\", \"Password\", data.Password, errors)}\r\n                {this.btnRender(\"Submit\")}\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","// component for registering the user\r\n\r\nimport React , {Component} from \"react\"\r\nimport Form from \"../common/Form\"\r\nimport Joi from \"joi-browser\"\r\nimport {userRegisteration} from \"../Data/Users\"\r\n\r\nclass Register extends Form{\r\n    state={\r\n        data:{\r\n            Name: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n        },\r\n        errors:{}\r\n    }\r\n\r\n    // schema input validation\r\nschema = {\r\n        Name:Joi.string().min(4).max(30).required().label(\"Name\"),\r\n        Email:Joi.string().email().min(6).max(30).required(),\r\n        Password:Joi.string().min(8).required(),\r\n}\r\n\r\n\r\n// handling creating new user\r\nhandleSubmit=async(e)=>{\r\n    e.preventDefault()\r\n\r\n    // valide the total inputs using formValidaion method\r\n    this.formValidation()\r\n    try{\r\n        // send a request to the server for creating a new user\r\n        const data = await userRegisteration(this.state.data)\r\n\r\n        //store the token in the local store to be able to direct login the user\r\n        localStorage.setItem(\"token\", data.headers[\"x-auth-token\"])\r\n\r\n        // redirect the user to the home page\r\n        window.location = \"/\"\r\n\r\n    }catch(error){\r\n\r\n        // handling the errors\r\n        if(error.response.status >=400 && error.response.status < 500){\r\n            alert(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\n    render(){\r\n        const {data, errors} = this.state\r\n        return(\r\n            <div className=\" ml-3\">\r\n                <h1 className=\"mt-2 mb-5\">Registeration</h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n\r\n            {/* rendering inputs using inputRender method */}\r\n                {this.inputRender(\"UserName\", \"text\", \"Name\", data.Name, errors)}\r\n                {this.inputRender(\"Email\", \"email\", \"Email\", data.Email, errors)}\r\n                {this.inputRender(\"Password\", \"password\", \"Password\", data.Password, errors)}\r\n                {this.btnRender(\"Submit\")}\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;","//component for rendering the navbar\r\n\r\nimport React , {Component} from \"react\"\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nclass NavBar extends Component{\r\n    \r\n    render(){\r\n        \r\n        // getting the current user to manage his premissions\r\n        const {user} = this.props\r\n        return(\r\n            <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\r\n                <h5 className=\"my-0 mr-md-auto font-weight-normal\"><NavLink to=\"/\" style={{textDecoration: \"none\", color: \"black\"}}>Online Product World</NavLink></h5>\r\n                <nav className=\"my-2 my-md-0 mr-md-3\">\r\n                    <NavLink className=\"p-2 text-dark\" to=\"/\">Home</NavLink>\r\n                    {(user) ? <NavLink className=\"p-2 text-dark\" to=\"/Product/new\">New Product</NavLink>:null}\r\n                        {(user) ? <NavLink className=\"p-2 text-dark\" to=\"/me\">{user.Name}</NavLink>: null}\r\n                        {(user) ?  <NavLink className=\"p-2 text-dark\" to=\"/LogOut\">LogOut</NavLink> : null}\r\n                                  \r\n                   {(user) ? null:<NavLink className=\"p-2 text-dark\" to=\"/Login\">Login</NavLink>}\r\n                    {(user) ? null:<NavLink className=\"p-2 text-dark\" to=\"/Register\">Registeration</NavLink>}\r\n                    \r\n                </nav>\r\n          </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","// component for logging the user out\r\n\r\nimport React , {Component} from \"react\"\r\n\r\nclass LogOut extends Component{\r\n\r\n   componentDidMount(){\r\n\r\n    // remove the access token from the local storage\r\n       localStorage.removeItem(\"token\")\r\n\r\n       // reload the page or redirect the user to the homepage\r\n       window.location = \"/\"\r\n   }\r\n   render(){\r\n       return null;\r\n   }\r\n}\r\n\r\nexport default LogOut;","// component for rendering the item details and updating the item\r\n\r\nimport React , {Component} from \"react\"\r\nimport Form from \"../common/Form\"\r\nimport Joi from \"joi-browser\"\r\nimport {getProducts, amendProducts} from \"../Data/Products\"\r\n\r\n\r\nclass ProdustDetails extends Form{\r\n    state={\r\n        data: {\r\n                _id:\"\",\r\n                Name:\"\",\r\n                Description:\"\",\r\n                Price:\"\",\r\n                Categery:\"\",\r\n            },\r\n            errors:{}\r\n      }\r\n\r\n      // input schema validation\r\nschema={\r\n    _id:Joi.string(),\r\n    Name: Joi.string().min(4).max(125).label(\"Name\"),\r\n    Description:Joi.string().min(4).max(1024).label(\"Description\"),\r\n    Price: Joi.number().integer().min(5).max(100000).label(\"Price\"),\r\n    Categery: Joi.string().valid(\"Smart Phones\",\"Laptop\", \"Accessories\").label(\"Categery\"),\r\n}\r\n\r\nasync componentDidMount(){\r\n    // getting data from server\r\n        const {data} = await getProducts()  \r\n        \r\n        // getting the item id\r\n        const _id = this.props.match.params.id\r\n\r\n        // find the item in data\r\n        const product = data.find(product=> product._id === _id)\r\n\r\n        // if there is no item throw error\r\n        if(!product)return this.props.history.replace(\"/NotFound\")\r\n\r\n        // getting the item details\r\n        data._id = product._id\r\n        data.Name = product.Name\r\n        data.Description = product.Description\r\n        data.Price = product.Price\r\n        data.Categery = product.Categery\r\n\r\n        // reset the data state by found item\r\n        this.setState({data})\r\n}\r\n\r\n\r\n// handling updating item\r\nhandleSave= async(e)=>{\r\n\r\n    // prevent the default event of submit button\r\n    e.preventDefault()\r\n\r\n    // clone the original data\r\n    const originalData = {...this.state.data}\r\n    try{\r\n\r\n        // send a request to the server to update the item\r\n        await amendProducts(this.state.data, this.props.user._id)\r\n\r\n        // redirect the user to the items page\r\n        window.location = \"/\"    \r\n    }catch(error){\r\n        // handling errors\r\n        if(error.response.status >= 400 && error.response.status < 500){\r\n            alert(error.response.data)\r\n            this.setState({data: originalData})\r\n        }\r\n    }\r\n}\r\n\r\n    render(){\r\n        const {data, errors} = this.state       \r\n        return(\r\n            <div className=\" ml-3\">\r\n            <h1 className=\"mt-2 mb-5\">Product</h1>\r\n        <form onSubmit={this.handleSave}>\r\n\r\n        {/* rending inputs using inputRender method */}\r\n            {this.inputRender(\"Product name\", \"text\", \"Name\", data.Name, errors)}\r\n            {this.inputRender(\"Description\", \"text\", \"Description\", data.Description, errors)}\r\n            {this.inputRender(\"Price\", \"text\", \"Price\", data.Price, errors)}\r\n            {this.inputRender(\"Categery\", \"text\", \"Categery\", data.Categery, errors)}\r\n            {this.btnRender(\"Save\")}\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdustDetails;","//component for creating new item\r\n\r\nimport React , {Component} from \"react\"\r\nimport Form from \"../common/Form\"\r\nimport Joi from \"joi-browser\"\r\nimport {amendProducts} from \"../Data/Products\"\r\n\r\n\r\nclass ProdustDetails extends Form{\r\n    state={\r\n        data: {\r\n                _id:\"\",\r\n                Name:\"\",\r\n                Description:\"\",\r\n                Price:\"\",\r\n                Categery:\"\",\r\n            },\r\n            errors:{}\r\n      }\r\n\r\n      // schema input validation\r\nschema={\r\n    _id:Joi.string(),\r\n    Name: Joi.string().min(4).max(125).label(\"Name\"),\r\n    Description:Joi.string().min(4).max(1024).label(\"Description\"),\r\n    Price: Joi.number().integer().min(5).max(100000).label(\"Price\"),\r\n    Categery: Joi.string().valid(\"Smart Phones\",\"Laptop\", \"Accessories\").label(\"Categery\"),\r\n}\r\n\r\n//handling the item saving\r\nhandleSave= async(e)=>{\r\n    // prvent the default event of submit button\r\n    e.preventDefault()\r\n    try{\r\n        //send a request to the server by the new item\r\n        await amendProducts(this.state.data, this.props.user._id)\r\n\r\n        // redirect the user to the items\r\n        window.location = \"/\"    \r\n    }catch(error){\r\n\r\n        // handling the errors\r\n        if(error.response.status >=400 && error.response.status < 500){\r\n            alert(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\n    render(){\r\n        const {data, errors} = this.state\r\n        return(\r\n            <div className=\" ml-3\">\r\n            <h1 className=\"mt-2 mb-5\">Product</h1>\r\n        <form onSubmit={this.handleSave}>\r\n\r\n         {/* rendering inputs using inputRender method */}\r\n            {this.inputRender(\"Product name\", \"text\", \"Name\", data.Name, errors)}\r\n            {this.inputRender(\"Description\", \"text\", \"Description\", data.Description, errors)}\r\n            {this.inputRender(\"Price\", \"text\", \"Price\", data.Price, errors)}\r\n            {this.inputRender(\"Categery\", \"text\", \"Categery\", data.Categery, errors)}\r\n            {this.btnRender(\"Save\")}\r\n        </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProdustDetails;","// component to get the user profile\r\n\r\nimport React , {Component} from \"react\"\r\nimport {getProfile} from \"../Data/Users\"\r\nimport {Link} from \"react-router-dom\"\r\nimport {deleteProduct} from \"../Data/Products\"\r\n\r\nclass Me extends Component{\r\n    state = {\r\n        isloading: false\r\n    }\r\n    \r\n\r\n    // getting the user profile\r\nasync componentDidMount(){\r\n    try{\r\n        //sending request to the server\r\n        const user = await getProfile()\r\n\r\n        // reset the state\r\n        this.setState({user:user.data}) \r\n\r\n        // reset the loading state to true to allow the page to render\r\n        this.setState({isloading: true}) \r\n    }catch(error){\r\n        this.setState({isloading: true}) \r\n    }\r\n}\r\n\r\n// handling remove item\r\nhandleDeleteBtn= async(product)=>{\r\n\r\n    // clone the original data\r\n    const originalData = {...this.state.data}\r\n    try{\r\n        // sending a request to the server to delete the item\r\n        await deleteProduct(product)\r\n\r\n        // reload the page\r\n        window.location.reload()    \r\n    }catch(error){\r\n\r\n        // handling the errors\r\n        if(error.response.status >= 400 && error.response.status < 500){\r\n            alert(error.response.data)\r\n        }\r\n    }\r\n}\r\n\r\n    render(){\r\n        if(this.state.isloading === false)return <p>Loading...></p>;\r\n        const {user} = this.state\r\n        console.log(user)\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"jumbotron\">\r\n                    <div className=\"container\">\r\n                    <h1 className=\"display-3\">Hello, {user.Name}!</h1>\r\n                    <p>Welcome to The Online Product World, where you will find everything you need related by laptops and mobiles hardwares.</p>\r\n                    </div>\r\n                </div>\r\n                {(user.CreatedItems.length === 0) ? <p className=\"ml-3\">There are no products yet!!!</p>:\r\n                <div className=\"container\">\r\n                <div className=\"row\">\r\n                {user.CreatedItems.map(item=>\r\n                    <div className=\"col-md-4\">\r\n                    <h2>{item.Name}</h2>\r\n                    <p>{item.Price} U$D</p>\r\n                    <p>{item.Description}</p>\r\n                    <button className=\"btn btn-secondary mb-2\" onClick={()=>this.handleDeleteBtn(item)}>Delete</button>\r\n                    <p><Link className=\"btn btn-secondary\" to={`/Product/${item._id}`} role=\"button\">View details »</Link></p>\r\n                     </div>\r\n                    )}\r\n                \r\n                </div>\r\n            </div>}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Me;","// Not Found Component\r\n\r\nimport React from \"react\"\r\n\r\nfunction NotFound(){\r\n        return(\r\n            <h6 class=\"h3 m-3\">Oops, Not Found!!!</h6>\r\n        )\r\n    }\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\nimport {Route, Switch, Redirect} from \"react-router-dom\"\nimport Home from \"./components/Home\"\nimport Login from \"./components/Login\"\nimport Register from \"./components/Register\"\nimport NavBar from \"./components/NavBar\"\nimport LogOut from \"./components/LogOut\"\nimport ProductDetails from \"./components/ProductDetails\"\nimport New from \"./components/New\"\nimport Me from \"./components/Me\"\nimport NotFound from \"./components/NotFound\"\nimport {getUser} from \"./Data/Users\"\nimport './App.css';\n\n\n\nclass App extends Component {\n  state={\n    isLoaded: false\n  }\n\n  async componentDidMount(){\n   try{\n     // getting current user\n      this.setState({user: await getUser()})\n\n      // loading the component\n      this.setState({isLoaded: true})\n\n    }catch(ex){\n      this.setState({isLoaded: true})\n    }\n  }\n\n  render() {\n    if(this.state.isLoaded === false) return <p className=\"m-2\">Loading...</p>\n    return (\n      <React.Fragment>\n      <NavBar user={this.state.user}/>\n      <div>\n        <Switch>\n           <Route path=\"/Product/new\" render={(props)=><New user={this.state.user}/>}/>\n          <Route path=\"/Product/:id\" render={(props)=><ProductDetails user={this.state.user} {...props}/>}/>\n          <Route path=\"/Me\" component={Me}/>\n          <Route path=\"/LogOut\" component={LogOut}/>\n          <Route path=\"/Register\" component={Register}/>\n          <Route path=\"/Login\" component={Login}/>\n          <Route path=\"/\"  exact component={Home}/>\n          <Route path=\"/NotFound\"  component={NotFound}/>\n          <Redirect to=\"/NotFound\"/>\n        </Switch>\n        </div>\n        </React.Fragment>\n    )   \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Route, BrowserRouter, Switch, Redirect} from \"react-router-dom\"\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n<App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}